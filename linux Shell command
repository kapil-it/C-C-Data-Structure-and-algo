#!/bin/sh
usage()
{
    echo "Usage: $command [-i|-u|-b|-p|-r|-R|-h  ]"
    echo "-i : fresh install "
    echo "-u : upgrade install"
    echo "-b :Upgrade Agent only , no server info will be updated"
    echo "-p : generate provisioning rpm/deb"
    echo "-r : Use this option while installing/upgrading, to run macmnsvc as root user"
	echo "-R : Set Relay Server ('IP1:Port1[;IP2:Port2;...]')"
	echo "-d : install directory"
    echo "-h : show this help"
}
if [ $# -eq 0 ]; then 
    usage
    exit 1
fi

while getopts ircd:ubh:g:t:o:pR:f opt
  do	case "$opt" in
      i)  install="yes";;
      c)  cloud="$OPTARG";;
      u)  upgrade="yes";;
      b) upgrade="yes"
         upgradeagentonly="yes";;
      g)  guid="$OPTARG";;
      t) tenantid="$OPTARG";;
      p) Provision="yes";;
      r)  macmnsvcroot="yes";;
      o) bitforce="$OPTARG";;
	  R) Relay="$OPTARG";;
	  f)  force="yes";;
	  d) install_dir="$OPTARG";;
      h)  usage
	  exit 0;;
      [?])	usage
      exit 1;;
done
echo "*******install_dir = ($install_dir)"
  
  
  


  *******************************************************************************
  other command
  cat filename
  uname -a  show the version of the OS and karnal
  head filename
  tail filename
  
  #to fatch the particuler field from file based on condition
  awk '$17>90{print $17}' cpu_12_6_1.txt
  #to fach the whole line based on condition from file
  awk '$17>90' cpu_12_6_1.txt
  
  #generate strace log for ls-la command
  strace -o /tmp/strace.log ls-la
  #using pid run strace for a process
  strace -p pid -o /tmp/strace.log
  #generate the strace for c program using terminal
  strace -o /tmp/strace.log ./filename
  #how to show all process with only pid
  ps -eo pid,cmd
  #how to get only pid of the process based on name
  ps -eo pid, cmd |grep -i process name
  #To show all the details about the all process
  ps -aux
  #to show all the detail about a dedicate process
  ps -aux |grep -i process name
  #want to fatch path of the utility or process
  which process_name
  which ls 
  which strace
  #want to know the 
  #List all shared lib ,  executable or library internally are using or want to debug the binary.
  ldd Mue
  
#When we have an object file and we donâ€™t have the source code with us and we have to find out the maximum information from the file. To do so objdump plays a very vital role. The main purpose of the objdump command is to help in debugging the object file. It is used for the following listed purposes:
#To retrieve archive header
#To get the offset of the file
#To get the bfdname
#To get the demangle
#To debug the file
#To disassemble the file
#To retrieve the file headers
objdump -p process-name
Ex- objdump -p /opt/McAfee/agent/bin/Mue

 #display all the detail (property information) of executable or static or shared library
 file executable_name
  
  # diffrence between yum and RPM 
  #diffrence debin based os and RPM based OS
  https://alldifferences.com/deb-vs-rpm/
  
  
  
  
ps -x  show process list 
kill -9 pid   kill the process
nm exe_name show all symbol related to binary/exe
file exe/binary_name show ll info about file
cat file name - show the file on console
mv - move
cp -copy
rm -rf directory name or file name - delete whole folder or directory
ls - list all file or folder
grep - this command use for facing valid info from yoyr result
example-
ls | grep string search
ps -x | grep string search
whoami - show current user name
pwd - show current working folder
mkdir folder_name - create folder
rmdir - delete folder
cd - change directory
uname -a show OS name and version
tar option filename - zip or unzip file
#how to read the rpm file contant
rpm -q --scripts rpm-file-name
#how to get currently runniing process
ps -x|grep -i 'masvc self_start'|grep -v grep
ps -x|grep -i 'masvc self_start'|grep -v grep|wc -l
